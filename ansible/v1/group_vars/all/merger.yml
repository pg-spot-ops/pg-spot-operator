---
# Top level instance manifest keys
uuid: "{{ instance_manifest.uuid | d('') }}"
api_version: "{{ instance_manifest.api_version | d('v1') }}"
kind: "{{ instance_manifest.kind | d('pg_spot_operator_instance') }}"
instance_name: "{{ instance_manifest.instance_name }}"
description: "{{ instance_manifest.description | d('') }}"
cloud: "{{ instance_manifest.cloud | d('vagrant-libvirt') }}"
region: "{{ instance_manifest.region | d('local') }}"
is_paused: "{{ instance_manifest.is_paused | d(False) }}"
user_tags: "{{ instance_manifest.user_tags | d({}) }}"
setup_finished_callback: "{{ instance_manifest.setup_finished_callback | d('') }}"

# Top level override manifest keys
uuid: "{{ engine_overrides.uuid | d(None) }}"
user_tags: "{{ user_tags | ansible.builtin.combine(engine_overrides.user_tags | d({})) }}"
setup_finished_callback: "{{ setup_finished_callback | d('') or engine_overrides.setup_finished_callback | d('') }}"
connstr_private: "{{ engine_overrides.connstr_private | d('') }}"
connstr_public: "{{ engine_overrides.connstr_public | d('') }}"

# Apply override manifest sections if any
postgresql: "{{ instance_manifest.postgresql | d({}) | ansible.builtin.combine(engine_overrides.postgresql | d({}), recursive=true) }}"
vm: "{{ instance_manifest.vm | d({}) | ansible.builtin.combine(engine_overrides.vm | d({}), recursive=true) }}"
os: "{{ instance_manifest.os | d({}) | ansible.builtin.combine(engine_overrides.os | d({}), recursive=true) }}"
backup: "{{ instance_manifest.backup | d({}) | ansible.builtin.combine(engine_overrides.backup | d({}), recursive=true) }}"
aws: "{{ instance_manifest.aws | d({}) | ansible.builtin.combine(engine_overrides.aws | d({}), recursive=true) }}"
