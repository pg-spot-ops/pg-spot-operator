---
- block:
  - name: Assert admin pass
    ansible.builtin.assert:
      that: postgresql.admin_user_password|d('')
      quiet: true
    when: postgresql.admin_user|d('')

  - name: Ensure postgres started
    ansible.builtin.service: name=postgresql state=started

  - name: Create the "app" user if requested
    become: yes
    become_user: postgres
    community.postgresql.postgresql_user:
      state: present
      name: "{{ postgresql.admin_user }}"
      password: "{{ postgresql.admin_user_password }}"
      role_attr_flags: "{{ postgresql.admin_is_superuser | d(True) | ternary('SUPERUSER', 'CREATEDB,CREATEROLE') }}"
      login_host: /var/run/postgresql
      login_port: "5432"
    when: postgresql.admin_user | d('') | length > 0

  - name: Create the "app" user if requested
    become: yes
    become_user: postgres
    community.postgresql.postgresql_privs:
      database: postgres
      type: group
      role: "{{ postgresql.admin_user }}"
      objs: >-
        {{ non_su_roles_17 if postgres_version|int >= 17
          else  non_su_roles_16 if postgres_version|int >= 16
          else non_su_roles_15 if postgres_version|int >= 15
          else non_su_roles_14 }}
      login_host: /var/run/postgresql
      login_port: "5432"
    when: not postgresql.admin_is_superuser|d(False)

  when: postgresql.admin_user | d('')

- name: Create the "app" DB if requested
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    state: present
    name: "{{ postgresql.app_db_name }}"
    owner: "{{ postgresql.admin_user | default('') or 'postgres' }}"
    template: template1
    login_host: /var/run/postgresql
    login_port: "5432"
  when: postgresql.app_db_name | d('') | length > 0
