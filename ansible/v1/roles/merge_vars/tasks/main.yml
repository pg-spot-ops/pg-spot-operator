- name: Top level instance manifest keys
  set_fact:
    uuid: "{{ instance_manifest.uuid | d('') }}"
    api_version: "{{ instance_manifest.api_version | d('v1') }}"
    kind: "{{ instance_manifest.kind | d('pg_spot_operator_instance') }}"
    instance_name: "{{ instance_manifest.instance_name }}"
    description: "{{ instance_manifest.description | d('') }}"
    cloud: "{{ instance_manifest.cloud | d('vagrant-libvirt') }}"
    region: "{{ instance_manifest.region | d('local') }}"
    is_paused: "{{ instance_manifest.is_paused | d(False) }}"
    user_tags: "{{ instance_manifest.user_tags | d({}) }}"
    setup_finished_callback: "{{ instance_manifest.setup_finished_callback | d('') }}"

- name: Top level override manifest keys
  set_fact:
    uuid: "{{ engine_overrides.uuid | d(None) }}"
    user_tags: "{{ user_tags | ansible.builtin.combine(engine_overrides.user_tags | d({})) }}"
    setup_finished_callback: "{{ setup_finished_callback | d('') or engine_overrides.setup_finished_callback | d('') }}"
    connstr_private: "{{ engine_overrides.connstr_private | d('') }}"
    connstr_public: "{{ engine_overrides.connstr_public | d('') }}"

- name: Apply override manifest sections if any
  set_fact:
    postgresql: "{{ instance_manifest.postgresql | d({}) | ansible.builtin.combine(engine_overrides.postgresql | d({}), recursive=true) }}"
    vm: "{{ instance_manifest.vm | d({}) | ansible.builtin.combine(engine_overrides.vm | d({}), recursive=true) }}"
    os: "{{ instance_manifest.os | d({}) | ansible.builtin.combine(engine_overrides.os | d({}), recursive=true) }}"
    backup: "{{ instance_manifest.backup | d({}) | ansible.builtin.combine(engine_overrides.backup | d({}), recursive=true) }}"
    aws: "{{ instance_manifest.aws | d({}) | ansible.builtin.combine(engine_overrides.aws | d({}), recursive=true) }}"
    monitoring: "{{ instance_manifest.monitoring | d({}) | ansible.builtin.combine(engine_overrides.monitoring | d({}), recursive=true) }}"

- name: Show merged vars - top lvl
  debug:
    msg: "{{ item.name }}: {{ item.value }}"
  when: item.value
  loop:
    - { name: uuid, value: "{{ uuid | d('') }}"}
    - { name: instance_name, value: "{{ instance_name | d('') }}"}
    - { name: cloud, value: "{{ cloud | d('') }}"}
    - { name: region, value: "{{ region | d('') }}"}
    - { name: expiration_date, value: "{{ expiration_date | d('') }}"}

- name: Show merged vars
  debug:
    msg: "Section {{ item.section_name }}: {{ item.section_data }}"
  loop:
    - { section_name: postgresql, section_data: "{{ postgresql | d({}) }}"}
    - { section_name: vm, section_data: "{{ vm | d({}) }}"}
    - { section_name: os, section_data: "{{ os | d({}) }}"}
    - { section_name: backup, section_data: "{{ backup | d({}) }}"}
    - { section_name: aws, section_data: "{{ aws | d({}) }}"}
    - { section_name: monitoring, section_data: "{{ monitoring | d({}) }}"}
